name: Release Helm Chart

on:
  release:
    types:
      - published
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
    types: [labeled, opened, synchronize, reopened]

jobs:
  helm-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ok-to-charts')) ||
      (github.event_name == 'release' && github.event.action == 'published')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.2

      - name: Determine chart version
        id: chart_version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            # Use SHA for main branch
            CHART_VERSION="0.0.0-$(echo ${{ github.sha }} | cut -c1-7)"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Use tag version (strip 'v' prefix)
            CHART_VERSION="${GITHUB_REF#refs/tags/v}"
          else
            # Use PR SHA for dry run
            CHART_VERSION="0.0.0-$(echo ${{ github.sha }} | cut -c1-7)"
          fi
          echo "version=$CHART_VERSION" >> $GITHUB_OUTPUT

      - name: Install Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          mv kustomize /usr/local/bin

      - name: Prepare CRDs folder
        run: |
          mkdir -p dist/chart/crds
          kustomize build config/default | yq ea 'select(.kind == "CustomResourceDefinition")' > dist/chart/crds/crds.yaml
          rm -rf dist/chart/templates/crd

      - name: Package Helm chart
        run: |
          helm package dist/chart --version ${{ steps.chart_version.outputs.version }}

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Helm chart to GHCR
        run: |
          helm push metal-operator-${{ steps.chart_version.outputs.version }}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts